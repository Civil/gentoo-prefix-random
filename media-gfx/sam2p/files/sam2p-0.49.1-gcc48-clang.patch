--- ccdep.pl	2016-04-20 15:55:08.000000000 +0200
+++ ccdep.pl	2016-04-20 15:57:19.000000000 +0200
@@ -181,8 +181,10 @@
   } elsif ($S=~/\A\s{3,}from ([^:]+)/) {
     # ^^^ gcc-3.2
     $included_from=$1;
-  } elsif ($S=~/\A([^:]+):\d+:(\d+:)? warning: #warning (NULL-PROVIDES|PROVIDES|CONFLICTS|REQUIRES):(.*)\Z/) {
+  } elsif ($S=~/\A([^:]+):\d+:(\d+:)? warning: #warning (NULL-PROVIDES|PROVIDES|CONFLICTS|REQUIRES):(.*)\Z/ or
+           $S=~/\A([^:]+):\d+:(\d+:)? warning: (NULL-PROVIDES|PROVIDES|CONFLICTS|REQUIRES):(.*)\ \[-W/) {
     # ^^^ (\d+:)? added for gcc-3.1
+    # ^^^ clang: appliers.cpp:554:6: warning: REQUIRES: out_gif.o [-W#warnings]
     # print STDERR "[$S]\n";
     my($DS,$B)=($1,$3);
     if (defined $included_from) { $DS=$included_from; undef $included_from }
@@ -230,11 +232,20 @@
   } elsif ($S=~/\A([^:]+):\d+:(\d+:)? warning: this is the location of /) {
     # ^^^ gcc-3.1
     undef $included_from;
-  } elsif ($S=~/: No such file or directory$/) {  # Depends on $ENV{LC_ALL}.
+  } elsif ($S=~/\A([^:]+):\d+:(\d+:)? warning: .*\bdeprecated\b/) {
+    # Example: /usr/include/features.h:148:3: warning: #warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-Wcpp]
+    undef $included_from;
+  } elsif ($S=~/: No such file or directory$/ or  # Depends on $ENV{LC_ALL}.
+           $S=~/: fatal error: .* file not found$/) {  # clang.
     # ^^^ gcc-3.3
     undef $included_from;
   } elsif ($S eq 'compilation terminated.') {  # Useless message, ignore.
   } elsif ($S=~/^distcc\[/) {  # Useless message, ignore.
+  } elsif ($S=~/^ *#/) {  # Useless message from gcc 4.8, ignore.
+  } elsif ($S=~/^ *\^/) {  # Useless message from gcc 4.8, ignore.
+  } elsif ($S=~/: warning: treating 'c' input as/) {  # Useless message from clang, ignore.
+  } elsif ($S=~/^\d+ warnings?(?: and \d+ errors?)? generated[.]$/) {  # Useless message from clang, ignore.
+  } elsif ($S=~/^\d+ errors? generated[.]$/) {  # Useless message from clang, ignore.
   } else {
     die "$0: invalid depret: [$S]\n";
   }
--- rule.hpp
+++ rule.hpp
@@ -43,7 +43,7 @@ class Rule { public:
       FF_XPM=10,
       FF_BMP=11,
       FF_XWD=12,
-      FF_X11=13
+      FF_X11=13  /* Don't add a comma, gcc-4.8.1. can't compile it that way. */
     END_STATIC_ENUM()
     ff_t FileFormat;
     Image::sf_t SampleFormat;
@@ -88,7 +88,7 @@ class Rule { public:
       PR_PNGAuto=15,
       PR_PNGAutoMaybe=25,
       PR_PNGAutoBadUnsigned=45,
-      PR_PNGAutoBadSigned=55,
+      PR_PNGAutoBadSigned=55
     END_STATIC_ENUM()
     pr_t Predictor;
 
